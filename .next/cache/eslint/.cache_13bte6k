[{"C:\\Users\\EObiajuru\\Desktop\\pay-with-providus-widget\\pages\\index.tsx":"1","C:\\Users\\EObiajuru\\Desktop\\pay-with-providus-widget\\pages\\_app.tsx":"2","C:\\Users\\EObiajuru\\Desktop\\pay-with-providus-widget\\pages\\_document.tsx":"3","C:\\Users\\EObiajuru\\Desktop\\pay-with-providus-widget\\components\\BankTransfer.tsx":"4","C:\\Users\\EObiajuru\\Desktop\\pay-with-providus-widget\\components\\index.ts":"5","C:\\Users\\EObiajuru\\Desktop\\pay-with-providus-widget\\components\\Loader.tsx":"6","C:\\Users\\EObiajuru\\Desktop\\pay-with-providus-widget\\components\\PayWithCard.tsx":"7","C:\\Users\\EObiajuru\\Desktop\\pay-with-providus-widget\\components\\Providers.tsx":"8","C:\\Users\\EObiajuru\\Desktop\\pay-with-providus-widget\\components\\SelectPaymentType.tsx":"9"},{"size":5243,"mtime":1705569015238,"results":"10","hashOfConfig":"11"},{"size":430,"mtime":1705569015234,"results":"12","hashOfConfig":"11"},{"size":327,"mtime":1705569015236,"results":"13","hashOfConfig":"11"},{"size":21656,"mtime":1705569015209,"results":"14","hashOfConfig":"11"},{"size":237,"mtime":1705569015221,"results":"15","hashOfConfig":"11"},{"size":269,"mtime":1705569015213,"results":"16","hashOfConfig":"11"},{"size":3707,"mtime":1705569015215,"results":"17","hashOfConfig":"11"},{"size":270,"mtime":1705569015218,"results":"18","hashOfConfig":"11"},{"size":5580,"mtime":1705569015220,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","suppressedMessages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"14s6dxn",{"filePath":"23","messages":"24","suppressedMessages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","suppressedMessages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","suppressedMessages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","suppressedMessages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","suppressedMessages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41"},{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","suppressedMessages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\EObiajuru\\Desktop\\pay-with-providus-widget\\pages\\index.tsx",[],["48"],"C:\\Users\\EObiajuru\\Desktop\\pay-with-providus-widget\\pages\\_app.tsx",[],[],"C:\\Users\\EObiajuru\\Desktop\\pay-with-providus-widget\\pages\\_document.tsx",[],[],"C:\\Users\\EObiajuru\\Desktop\\pay-with-providus-widget\\components\\BankTransfer.tsx",[],[],"C:\\Users\\EObiajuru\\Desktop\\pay-with-providus-widget\\components\\index.ts",[],[],"C:\\Users\\EObiajuru\\Desktop\\pay-with-providus-widget\\components\\Loader.tsx",[],[],"C:\\Users\\EObiajuru\\Desktop\\pay-with-providus-widget\\components\\PayWithCard.tsx",["49"],[],"import React, { useState, useEffect } from \"react\";\r\nimport Image from \"next/image\";\r\n\r\nimport { Loader } from \"./Loader\";\r\nimport { baseApi } from \"@/services/api\";\r\nimport { encrypt } from \"@/utils/helpers\";\r\n\r\nexport const PayWithCard = ({\r\n  setStatus,\r\n  customerDetails,\r\n}: {\r\n  setStatus: Function;\r\n  customerDetails: any;\r\n}) => {\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(\"\");\r\n  const [isEmbedded, setIsEmbedded] = useState(false);\r\n\r\n  const getCardSessionId = async () => {\r\n    setLoading(true);\r\n    setError(\"\");\r\n\r\n    const credentials: any = {\r\n      currency: customerDetails?.currency || \"NGN\",\r\n      amount: customerDetails?.amount,\r\n      email: customerDetails?.email,\r\n      // cancelURL: \"http://localhost:8080\",\r\n      // redirectURL: \"http://localhost:8080\",\r\n    };\r\n\r\n    if (customerDetails?.description) {\r\n      credentials.description = customerDetails?.description;\r\n    }\r\n    if (customerDetails?.showBillingAddress) {\r\n      credentials.showBillingAddress = \"YES\";\r\n    } else {\r\n      credentials.showBillingAddress = \"NO\";\r\n    }\r\n    if (customerDetails?.showEmail) {\r\n      credentials.showEmail = \"YES\";\r\n    } else {\r\n      credentials.showEmail = \"NO\";\r\n    }\r\n\r\n    try {\r\n      const { data } = await baseApi.post(\r\n        \"/hosted-card/session\",\r\n        {\r\n          data: encrypt(JSON.stringify(credentials), customerDetails.publicKey),\r\n        },\r\n        { headers: { \"x-public-key\": customerDetails.publicKey } }\r\n      );\r\n      setIsEmbedded(true);\r\n      window.Checkout.configure({\r\n        session: {\r\n          id: data?.data?.sessionId,\r\n        },\r\n      });\r\n      window.Checkout.showEmbeddedPage(\"#embed-target\");\r\n    } catch (err) {\r\n      setError(err?.response?.data?.message || err?.message);\r\n      setIsEmbedded(false);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    getCardSessionId();\r\n  }, []);\r\n\r\n  const renderContent = () => {\r\n    if (loading) {\r\n      return (\r\n        <div className=\"w-full flex flex-col items-center py-20 px-8 2xs:px-4\">\r\n          <Loader />\r\n          <p className=\"text-[16px] text-black/80 text-center mt-3\">\r\n            Processing...\r\n          </p>\r\n        </div>\r\n      );\r\n    }\r\n    if (error) {\r\n      return (\r\n        <div className=\"w-full py-20 px-8 flex flex-col items-center 2xs:px-4\">\r\n          <p className=\"text-[16px] text-black/80 text-center\">{error}</p>\r\n          <div\r\n            className=\"w-[60%] mt-6 px-6 py-3 text-[16px] text-white border-primary-yellow bg-primary-yellow border-[1px] rounded-[5px] text-center cursor-pointer\"\r\n            onClick={() => {\r\n              setLoading(true);\r\n              setError(\"\");\r\n              getCardSessionId();\r\n            }}\r\n          >\r\n            Retry\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n\r\n    return null;\r\n  };\r\n\r\n  return (\r\n    <div className=\"2xs:w-full rounded-[7px] overflow-hidden border-gray-200 border-[1px]\">\r\n      <div className=\"w-[445px]  2xs:w-full relative z-[100] max-h-[95vh] overflow-y-auto bg-white\">\r\n        <div className=\"w-full px-8 py-4 flex items-center justify-between border-line-gray border-b-[1px] 2xs:px-4\">\r\n          <Image\r\n            src=\"/img/providus-logo.png\"\r\n            alt=\"Providus Logo\"\r\n            width={82}\r\n            height={40}\r\n          />\r\n          <p className=\"text-[14px] uppercase text-primary-black font-medium\">\r\n            PROVIDUS CHECKOUT\r\n          </p>\r\n        </div>\r\n        {renderContent()}\r\n        <div\r\n          id=\"embed-target\"\r\n          className={`${isEmbedded && \"card__target\"}`}\r\n        ></div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","C:\\Users\\EObiajuru\\Desktop\\pay-with-providus-widget\\components\\Providers.tsx",[],[],"C:\\Users\\EObiajuru\\Desktop\\pay-with-providus-widget\\components\\SelectPaymentType.tsx",[],[],{"ruleId":"50","severity":1,"message":"51","line":62,"column":6,"nodeType":"52","endLine":62,"endColumn":37,"suggestions":"53","suppressions":"54"},{"ruleId":"50","severity":1,"message":"55","line":70,"column":6,"nodeType":"52","endLine":70,"endColumn":8,"suggestions":"56"},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getPaymentOptions'. Either include it or remove the dependency array.","ArrayExpression",["57"],["58"],"React Hook useEffect has a missing dependency: 'getCardSessionId'. Either include it or remove the dependency array.",["59"],{"desc":"60","fix":"61"},{"kind":"62","justification":"63"},{"desc":"64","fix":"65"},"Update the dependencies array to be: [customerDetails?.customerName, getPaymentOptions]",{"range":"66","text":"67"},"directive","","Update the dependencies array to be: [getCardSessionId]",{"range":"68","text":"69"},[2015,2046],"[customerDetails?.customerName, getPaymentOptions]",[1950,1952],"[getCardSessionId]"]